1. MyBatis 다운 받아서 util 폴더에 넣고 압축 해제

2. mybatis-3.x.xx.jar, mybatis-3.x.xx.pdf 파일이 필요
 2-1. 프로젝트에서 마우스 우클릭 build path > configure build path
 2-2. 프로젝트 선택 후 window > preferences > Maven > Download Artifact Javadoc 선택
 
3. MyBatis는 자바진영에서 사용하는 SQL 프레임워크 (=구조화 된 틀)

4. 만들기
 4-1. VO를 먼저 만들자 
 		원하는 테이블과 컬럼명이 일치해야 한다
 		일부를 빼도 상관없고 다른 테이블의 컬럼명을 넣어도 상관 없다
 		
 4-2. config.xml을 만들자(이름은 마음대로 해도 상관없음)
 		(참고, xml 이란 확장 마크업 언어 : 사용자가 태그를 만들어서 사용할 수 있다)
 		다운 받은 pdf를 보면 만드는 법이 나온다 (3p)
 		xml 파일의 첫 줄은 무조건 <?xml version="1.0" encoding="UTF-8"?>
 		encoding 이란 문자를 바이트코드로 변환하는 것(컴파일 단계와 똑같음, 입력된 값을 해석하고 실행하기 위해서)
 		utf-8 : 전 세계 언어를 표현 가능. 유니코드
 			: 오라클 접속 정보 입력
 			: mapper.xml 위치 지정
 			
 4-3. mapper.xml 만들기
 		다운 받은 pdf를 보면 만드는 법이 나온다 (4p)
 		<mapper namespace="맵퍼이름"> 는 mapper가 여러개 일 때 구분하기 위함이다
 		자바에서 mapper에 접근할 때 namespace가 지정한 맵퍼이름.id 로 접근한다
 		mapper는 쿼리를 사용하여 DB에 보내고 결과를 받아서 mapper를 호출한 곳으로 결과를 되돌려 보내는 역할을 한다
 		태그 자체가 select, insert, update, delete 태그가 있다
 		
5. DBService.java 만들기
	: config 파일을 읽어서 자바에서 MyBatis를 사용할 수 있도록 도와주는 클래스
 		다운 받은 pdf를 보면 만드는 법이 나온다 (2p)
 		자바에서는 SqlSession 클래스를 사용 하기 위해서 SqlSessionFactory가 필요하다
 		SqlSessionFactory를 리턴해주는 클래스

6. DAO.java 만들기
	= DB 처리하는 클래스 : DBService.getFactory()로 SqlSessionFactory를 호출하고
										SqlSessionFactory를 이용해서 자바에서 사용할 수 있는 SqlSession을 만들어서 사용한다 














